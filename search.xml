<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>今天是个好日子 6.2 完成辣</title>
    <url>/2023/05/31/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">$ hexo clean &amp;&amp; hexo s   本地预览</span><br><span class="line">$ hexo clean</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo s   本地预览</span><br><span class="line">$ hexo clean    构建三部曲</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>首发</category>
      </categories>
  </entry>
  <entry>
    <title>爬🐛帮妹妹爬数据</title>
    <url>/2023/06/10/%E7%88%AC%F0%9F%90%9B%E5%B8%AE%E5%A6%B9%E5%A6%B9%E7%88%AC%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<p>记录，有幸学过python😁，欸，妹妹就来了哈哈哈😂，爬其他网站也类似的，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint, choice</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;house_info1.csv&#x27;</span>  <span class="comment"># csv 文件名</span></span><br><span class="line">filepath = path.join(<span class="string">&#x27;.&#x27;</span>, filename)</span><br><span class="line"><span class="comment"># 指定表头字段</span></span><br><span class="line">fieldnames = [<span class="string">&#x27;图片链接&#x27;</span>, <span class="string">&#x27;房源标题&#x27;</span>, <span class="string">&#x27;房源价格&#x27;</span>, <span class="string">&#x27;室厅&#x27;</span>, <span class="string">&#x27;面积&#x27;</span>, <span class="string">&#x27;朝向&#x27;</span>, <span class="string">&#x27;楼层&#x27;</span>, <span class="string">&#x27;修建时间&#x27;</span>, <span class="string">&#x27;小区名称&#x27;</span>, <span class="string">&#x27;地址&#x27;</span>,<span class="string">&#x27;地铁距离&#x27;</span>, <span class="string">&#x27;平方价格&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机生成 user-agent</span></span><br><span class="line">USER_AGENTS = [</span><br><span class="line">    <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36 Edg/87.0.664.75&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment"># 创建 csv.writer 对象，并指定表头字段</span></span><br><span class="line">    writer = csv.DictWriter(f, fieldnames=fieldnames)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入表头</span></span><br><span class="line">    writer.writeheader()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">31</span>,<span class="number">50</span>):</span><br><span class="line">        url = <span class="string">&#x27;https://nanning.anjuke.com/sale/p&#123;&#125;-dt1/&#x27;</span>.<span class="built_in">format</span>(i + <span class="number">1</span>)</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: choice(USER_AGENTS),</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.get(url, headers=headers)</span><br><span class="line">        soup = BeautifulSoup(res.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;-----------------爬取第%d页----------------------&#x27;</span> % (i + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 在每次请求后加入随机时间延迟</span></span><br><span class="line">        time.sleep(randint(<span class="number">1</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment">#遍历房源信息</span></span><br><span class="line">        house_list = soup.find_all(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;list&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> house <span class="keyword">in</span> house_list:</span><br><span class="line">            house_items = house.find_all(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;property&#x27;</span>)  <span class="comment">#所有房源</span></span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> house_items:</span><br><span class="line">                image = item.find(<span class="string">&#x27;img&#x27;</span>, class_=<span class="string">&#x27;lazy-img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>) <span class="comment"># 图片链接</span></span><br><span class="line">                title = item.find(<span class="string">&#x27;h3&#x27;</span>).text.strip() <span class="comment"># 标题</span></span><br><span class="line">                price = item.find(<span class="string">&#x27;span&#x27;</span>, class_=<span class="string">&#x27;property-price-total-num&#x27;</span>).text.strip() <span class="comment"># 价格</span></span><br><span class="line">                p_tags = item.find_all(<span class="string">&#x27;p&#x27;</span>,class_=<span class="string">&#x27;property-content-info-text&#x27;</span>) <span class="comment"># 室厅 面积 朝向 楼层 修建时间</span></span><br><span class="line">                p1 = p_tags[<span class="number">0</span>].text.strip() <span class="keyword">if</span> <span class="built_in">len</span>(p_tags) &gt;= <span class="number">1</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 室厅</span></span><br><span class="line">                p2 = p_tags[<span class="number">1</span>].text.strip() <span class="keyword">if</span> <span class="built_in">len</span>(p_tags) &gt;= <span class="number">2</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 面积</span></span><br><span class="line">                p3 = p_tags[<span class="number">2</span>].text.strip() <span class="keyword">if</span> <span class="built_in">len</span>(p_tags) &gt;= <span class="number">3</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 朝向</span></span><br><span class="line">                p4 = p_tags[<span class="number">3</span>].text.strip() <span class="keyword">if</span> <span class="built_in">len</span>(p_tags) &gt;= <span class="number">4</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 楼层</span></span><br><span class="line">                p5 = p_tags[<span class="number">4</span>].text.strip() <span class="keyword">if</span> <span class="built_in">len</span>(p_tags) &gt;= <span class="number">5</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 修建时间</span></span><br><span class="line">                plot = item.find(<span class="string">&#x27;p&#x27;</span>, class_=<span class="string">&#x27;property-content-info-comm-name&#x27;</span>).text.strip() <span class="comment"># 小区</span></span><br><span class="line">                address = item.find(<span class="string">&#x27;p&#x27;</span>, class_=<span class="string">&#x27;property-content-info-comm-address&#x27;</span>).text.strip() <span class="comment"># 地址</span></span><br><span class="line">                near_underground_span = item.find(<span class="string">&#x27;span&#x27;</span>, class_=<span class="string">&#x27;property-extra-text&#x27;</span>)  <span class="comment">#需要判断，有些房源没写有距离</span></span><br><span class="line">                nearUnderground = near_underground_span.text.strip() <span class="keyword">if</span> near_underground_span <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 地铁距离</span></span><br><span class="line">                priceAvg = item.find(<span class="string">&#x27;p&#x27;</span>,class_=<span class="string">&#x27;property-price-average&#x27;</span>).text.strip() <span class="comment"># 平方价格</span></span><br><span class="line"></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;图片链接: &#x27;</span>, image, <span class="string">&#x27;\n房源标题: &#x27;</span>, title, <span class="string">&#x27;\n房源价格: &#x27;</span>, price,</span><br><span class="line">                      <span class="string">&#x27;\n室厅: &#x27;</span>, p1, <span class="string">&#x27;\n面积: &#x27;</span>, p2, <span class="string">&#x27;\n朝向: &#x27;</span>, p3, <span class="string">&#x27;\n楼层: &#x27;</span>, p4, <span class="string">&#x27;\n修建时间: &#x27;</span>, p5,</span><br><span class="line">                      <span class="string">&#x27;\n小区名称: &#x27;</span>, plot, <span class="string">&#x27;\n地址: &#x27;</span>, address, <span class="string">&#x27;\n地铁距离: &#x27;</span>, nearUnderground,<span class="string">&#x27;\n平方价格: &#x27;</span>, priceAvg,<span class="string">&#x27;\n------------------------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 将每个字段写入一个字典</span></span><br><span class="line">                row = &#123;<span class="string">&#x27;图片链接&#x27;</span>: image, <span class="string">&#x27;房源标题&#x27;</span>: title, <span class="string">&#x27;房源价格&#x27;</span>: price, <span class="string">&#x27;室厅&#x27;</span>: p1, <span class="string">&#x27;面积&#x27;</span>: p2, <span class="string">&#x27;朝向&#x27;</span>: p3,</span><br><span class="line">                       <span class="string">&#x27;楼层&#x27;</span>: p4, <span class="string">&#x27;修建时间&#x27;</span>: p5, <span class="string">&#x27;小区名称&#x27;</span>: plot, <span class="string">&#x27;地址&#x27;</span>: address, <span class="string">&#x27;地铁距离&#x27;</span>: nearUnderground, <span class="string">&#x27;平方价格&#x27;</span>: priceAvg&#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 写入每一行数据</span></span><br><span class="line">                writer.writerow(row)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 在写入每一行数据时，随机添加 1~5 秒的延迟</span></span><br><span class="line">                time.sleep(randint(<span class="number">0</span>, <span class="number">1</span>))</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫 python</tag>
      </tags>
  </entry>
  <entry>
    <title>js汉字排序</title>
    <url>/2023/06/03/js%E6%B1%89%E5%AD%97%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="js-汉字排序"><a href="#js-汉字排序" class="headerlink" title="js 汉字排序"></a>js 汉字排序</h2><h3 id="1-汉字转拼音"><a href="#1-汉字转拼音" class="headerlink" title="1. 汉字转拼音"></a>1. 汉字转拼音</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="string">&quot;刘老大&quot;</span>, <span class="string">&quot;曹操&quot;</span>, <span class="string">&quot;李白&quot;</span>];</span><br><span class="line"></span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="title function_">localeCompare</span>(b)); <span class="comment">// 对汉字进行字典排序</span></span><br></pre></td></tr></table></figure>

<p>🌂Q</p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/2023/05/31/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>测试，6.2 初步完成辣</p>
]]></content>
      <categories>
        <category>BUG</category>
      </categories>
      <tags>
        <tag>BUG</tag>
      </tags>
  </entry>
</search>
